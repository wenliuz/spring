<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
	<!-- 指定自动搜索Bean组件、自动搜索切面类 -->
	<context:component-scan base-package="com.wenliuz.aop.service">
	</context:component-scan>

	<!-- 定义一个普通Bean实例，该Bean实例将被作为Aspect Bean -->
	<bean id="fourAdviceBean"
		  class="com.wenliuz.aop.xmlConfig.FourAdvice"/>
	<!-- 再定义一个普通Bean实例，该Bean实例将被作为Aspect Bean -->
	<bean id="secondAdviceBean"
		  class="com.wenliuz.aop.xmlConfig.SecondAdvice"/>

	<!-- 启动@AspectJ支持 -->
	<!--<aop:aspectj-autoproxy/>-->

	<aop:config>
		<!-- 将fourAdviceBean转换成切面Bean
			切面Bean的新名称为：fourAdviceAspect
			指定该切面的优先级为2 -->
		<aop:aspect id="fourAdviceAspect" ref="fourAdviceBean"
					order="2">
			<!-- 定义一个After增强处理，
				直接指定切入点表达式
				以切面Bean中的release()方法作为增强处理方法 -->
			<aop:after pointcut="execution(* com.wenliuz.aop.service.*..*(..))"
					   method="release"/>
			<!-- 定义一个Before增强处理，
				直接指定切入点表达式
				以切面Bean中的authority()方法作为增强处理方法 -->
			<aop:before pointcut="execution(* com.wenliuz.aop.service.*..*(..))"
						method="authority"/>
			<!-- 定义一个AfterReturning增强处理，
				直接指定切入点表达式
				以切面Bean中的log()方法作为增强处理方法 -->
			<aop:after-returning pointcut="execution(* com.wenliuz.aop.service.*..*(..))"
								 method="log" returning="rvt"/>
			<!-- 定义一个Around增强处理，
				直接指定切入点表达式
				以切面Bean中的processTx()方法作为增强处理方法 -->
			<aop:around pointcut="execution(* com.wenliuz.aop.service.*..*(..))"
						method="processTx"/>
		</aop:aspect>

		<!-- 将secondAdviceBean转换成切面Bean
			切面Bean的新名称为：secondAdviceAspect
			指定该切面的优先级为1，该切面里的增强处理将被优先织入 -->
		<aop:aspect id="secondAdviceAspect" ref="secondAdviceBean"
					order="1">
			<!-- 定义一个Before增强处理，
				直接指定切入点表达式
				以切面Bean中的authority()方法作为增强处理方法
				且该参数必须为String类型（由authority方法声明中msg参数的类型决定） -->
			<aop:before pointcut=
								"execution(* com.wenliuz.aop.service.*..*(..)) and args(aa)"
						method="authority"/>
		</aop:aspect>
	</aop:config>
</beans>
